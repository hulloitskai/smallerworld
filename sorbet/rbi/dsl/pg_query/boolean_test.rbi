# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PgQuery::BooleanTest`.
# Please instead update this file by running `bin/tapioca dsl PgQuery::BooleanTest`.


class PgQuery::BooleanTest < Google::Protobuf::AbstractMessage
  sig do
    params(
      arg: T.nilable(PgQuery::Node),
      booltesttype: T.nilable(T.any(Symbol, Integer)),
      location: T.nilable(Integer),
      xpr: T.nilable(PgQuery::Node)
    ).void
  end
  def initialize(arg: nil, booltesttype: nil, location: nil, xpr: nil); end

  sig { returns(T.nilable(PgQuery::Node)) }
  def arg; end

  sig { params(value: T.nilable(PgQuery::Node)).void }
  def arg=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def booltesttype; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def booltesttype=(value); end

  sig { void }
  def clear_arg; end

  sig { void }
  def clear_booltesttype; end

  sig { void }
  def clear_location; end

  sig { void }
  def clear_xpr; end

  sig { returns(Object) }
  def has_arg?; end

  sig { returns(Object) }
  def has_xpr?; end

  sig { returns(Integer) }
  def location; end

  sig { params(value: Integer).void }
  def location=(value); end

  sig { returns(T.nilable(PgQuery::Node)) }
  def xpr; end

  sig { params(value: T.nilable(PgQuery::Node)).void }
  def xpr=(value); end
end
