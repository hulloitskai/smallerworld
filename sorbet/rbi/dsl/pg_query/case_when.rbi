# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PgQuery::CaseWhen`.
# Please instead update this file by running `bin/tapioca dsl PgQuery::CaseWhen`.


class PgQuery::CaseWhen < Google::Protobuf::AbstractMessage
  sig do
    params(
      expr: T.nilable(PgQuery::Node),
      location: T.nilable(Integer),
      result: T.nilable(PgQuery::Node),
      xpr: T.nilable(PgQuery::Node)
    ).void
  end
  def initialize(expr: nil, location: nil, result: nil, xpr: nil); end

  sig { void }
  def clear_expr; end

  sig { void }
  def clear_location; end

  sig { void }
  def clear_result; end

  sig { void }
  def clear_xpr; end

  sig { returns(T.nilable(PgQuery::Node)) }
  def expr; end

  sig { params(value: T.nilable(PgQuery::Node)).void }
  def expr=(value); end

  sig { returns(Object) }
  def has_expr?; end

  sig { returns(Object) }
  def has_result?; end

  sig { returns(Object) }
  def has_xpr?; end

  sig { returns(Integer) }
  def location; end

  sig { params(value: Integer).void }
  def location=(value); end

  sig { returns(T.nilable(PgQuery::Node)) }
  def result; end

  sig { params(value: T.nilable(PgQuery::Node)).void }
  def result=(value); end

  sig { returns(T.nilable(PgQuery::Node)) }
  def xpr; end

  sig { params(value: T.nilable(PgQuery::Node)).void }
  def xpr=(value); end
end
