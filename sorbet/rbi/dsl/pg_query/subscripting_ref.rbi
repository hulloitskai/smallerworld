# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PgQuery::SubscriptingRef`.
# Please instead update this file by running `bin/tapioca dsl PgQuery::SubscriptingRef`.


class PgQuery::SubscriptingRef < Google::Protobuf::AbstractMessage
  sig do
    params(
      refassgnexpr: T.nilable(PgQuery::Node),
      refcollid: T.nilable(Integer),
      refcontainertype: T.nilable(Integer),
      refelemtype: T.nilable(Integer),
      refexpr: T.nilable(PgQuery::Node),
      reflowerindexpr: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node])),
      refrestype: T.nilable(Integer),
      reftypmod: T.nilable(Integer),
      refupperindexpr: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node])),
      xpr: T.nilable(PgQuery::Node)
    ).void
  end
  def initialize(refassgnexpr: nil, refcollid: nil, refcontainertype: nil, refelemtype: nil, refexpr: nil, reflowerindexpr: T.unsafe(nil), refrestype: nil, reftypmod: nil, refupperindexpr: T.unsafe(nil), xpr: nil); end

  sig { void }
  def clear_refassgnexpr; end

  sig { void }
  def clear_refcollid; end

  sig { void }
  def clear_refcontainertype; end

  sig { void }
  def clear_refelemtype; end

  sig { void }
  def clear_refexpr; end

  sig { void }
  def clear_reflowerindexpr; end

  sig { void }
  def clear_refrestype; end

  sig { void }
  def clear_reftypmod; end

  sig { void }
  def clear_refupperindexpr; end

  sig { void }
  def clear_xpr; end

  sig { returns(Object) }
  def has_refassgnexpr?; end

  sig { returns(Object) }
  def has_refexpr?; end

  sig { returns(Object) }
  def has_xpr?; end

  sig { returns(T.nilable(PgQuery::Node)) }
  def refassgnexpr; end

  sig { params(value: T.nilable(PgQuery::Node)).void }
  def refassgnexpr=(value); end

  sig { returns(Integer) }
  def refcollid; end

  sig { params(value: Integer).void }
  def refcollid=(value); end

  sig { returns(Integer) }
  def refcontainertype; end

  sig { params(value: Integer).void }
  def refcontainertype=(value); end

  sig { returns(Integer) }
  def refelemtype; end

  sig { params(value: Integer).void }
  def refelemtype=(value); end

  sig { returns(T.nilable(PgQuery::Node)) }
  def refexpr; end

  sig { params(value: T.nilable(PgQuery::Node)).void }
  def refexpr=(value); end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def reflowerindexpr; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def reflowerindexpr=(value); end

  sig { returns(Integer) }
  def refrestype; end

  sig { params(value: Integer).void }
  def refrestype=(value); end

  sig { returns(Integer) }
  def reftypmod; end

  sig { params(value: Integer).void }
  def reftypmod=(value); end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def refupperindexpr; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def refupperindexpr=(value); end

  sig { returns(T.nilable(PgQuery::Node)) }
  def xpr; end

  sig { params(value: T.nilable(PgQuery::Node)).void }
  def xpr=(value); end
end
