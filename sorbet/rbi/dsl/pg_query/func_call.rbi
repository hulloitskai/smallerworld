# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PgQuery::FuncCall`.
# Please instead update this file by running `bin/tapioca dsl PgQuery::FuncCall`.


class PgQuery::FuncCall < Google::Protobuf::AbstractMessage
  sig do
    params(
      agg_distinct: T.nilable(T::Boolean),
      agg_filter: T.nilable(PgQuery::Node),
      agg_order: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node])),
      agg_star: T.nilable(T::Boolean),
      agg_within_group: T.nilable(T::Boolean),
      args: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node])),
      func_variadic: T.nilable(T::Boolean),
      funcformat: T.nilable(T.any(Symbol, Integer)),
      funcname: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node])),
      location: T.nilable(Integer),
      over: T.nilable(PgQuery::WindowDef)
    ).void
  end
  def initialize(agg_distinct: nil, agg_filter: nil, agg_order: T.unsafe(nil), agg_star: nil, agg_within_group: nil, args: T.unsafe(nil), func_variadic: nil, funcformat: nil, funcname: T.unsafe(nil), location: nil, over: nil); end

  sig { returns(T::Boolean) }
  def agg_distinct; end

  sig { params(value: T::Boolean).void }
  def agg_distinct=(value); end

  sig { returns(T.nilable(PgQuery::Node)) }
  def agg_filter; end

  sig { params(value: T.nilable(PgQuery::Node)).void }
  def agg_filter=(value); end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def agg_order; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def agg_order=(value); end

  sig { returns(T::Boolean) }
  def agg_star; end

  sig { params(value: T::Boolean).void }
  def agg_star=(value); end

  sig { returns(T::Boolean) }
  def agg_within_group; end

  sig { params(value: T::Boolean).void }
  def agg_within_group=(value); end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def args; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def args=(value); end

  sig { void }
  def clear_agg_distinct; end

  sig { void }
  def clear_agg_filter; end

  sig { void }
  def clear_agg_order; end

  sig { void }
  def clear_agg_star; end

  sig { void }
  def clear_agg_within_group; end

  sig { void }
  def clear_args; end

  sig { void }
  def clear_func_variadic; end

  sig { void }
  def clear_funcformat; end

  sig { void }
  def clear_funcname; end

  sig { void }
  def clear_location; end

  sig { void }
  def clear_over; end

  sig { returns(T::Boolean) }
  def func_variadic; end

  sig { params(value: T::Boolean).void }
  def func_variadic=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def funcformat; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def funcformat=(value); end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def funcname; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def funcname=(value); end

  sig { returns(Object) }
  def has_agg_filter?; end

  sig { returns(Object) }
  def has_over?; end

  sig { returns(Integer) }
  def location; end

  sig { params(value: Integer).void }
  def location=(value); end

  sig { returns(T.nilable(PgQuery::WindowDef)) }
  def over; end

  sig { params(value: T.nilable(PgQuery::WindowDef)).void }
  def over=(value); end
end
