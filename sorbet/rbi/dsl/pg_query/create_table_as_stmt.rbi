# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PgQuery::CreateTableAsStmt`.
# Please instead update this file by running `bin/tapioca dsl PgQuery::CreateTableAsStmt`.


class PgQuery::CreateTableAsStmt < Google::Protobuf::AbstractMessage
  sig do
    params(
      if_not_exists: T.nilable(T::Boolean),
      into: T.nilable(PgQuery::IntoClause),
      is_select_into: T.nilable(T::Boolean),
      objtype: T.nilable(T.any(Symbol, Integer)),
      query: T.nilable(PgQuery::Node)
    ).void
  end
  def initialize(if_not_exists: nil, into: nil, is_select_into: nil, objtype: nil, query: nil); end

  sig { void }
  def clear_if_not_exists; end

  sig { void }
  def clear_into; end

  sig { void }
  def clear_is_select_into; end

  sig { void }
  def clear_objtype; end

  sig { void }
  def clear_query; end

  sig { returns(Object) }
  def has_into?; end

  sig { returns(Object) }
  def has_query?; end

  sig { returns(T::Boolean) }
  def if_not_exists; end

  sig { params(value: T::Boolean).void }
  def if_not_exists=(value); end

  sig { returns(T.nilable(PgQuery::IntoClause)) }
  def into; end

  sig { params(value: T.nilable(PgQuery::IntoClause)).void }
  def into=(value); end

  sig { returns(T::Boolean) }
  def is_select_into; end

  sig { params(value: T::Boolean).void }
  def is_select_into=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def objtype; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def objtype=(value); end

  sig { returns(T.nilable(PgQuery::Node)) }
  def query; end

  sig { params(value: T.nilable(PgQuery::Node)).void }
  def query=(value); end
end
