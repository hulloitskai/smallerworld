# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PgQuery::JsonExpr`.
# Please instead update this file by running `bin/tapioca dsl PgQuery::JsonExpr`.


class PgQuery::JsonExpr < Google::Protobuf::AbstractMessage
  sig do
    params(
      collation: T.nilable(Integer),
      column_name: T.nilable(String),
      format: T.nilable(PgQuery::JsonFormat),
      formatted_expr: T.nilable(PgQuery::Node),
      location: T.nilable(Integer),
      omit_quotes: T.nilable(T::Boolean),
      on_empty: T.nilable(PgQuery::JsonBehavior),
      on_error: T.nilable(PgQuery::JsonBehavior),
      op: T.nilable(T.any(Symbol, Integer)),
      passing_names: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node])),
      passing_values: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node])),
      path_spec: T.nilable(PgQuery::Node),
      returning: T.nilable(PgQuery::JsonReturning),
      use_io_coercion: T.nilable(T::Boolean),
      use_json_coercion: T.nilable(T::Boolean),
      wrapper: T.nilable(T.any(Symbol, Integer)),
      xpr: T.nilable(PgQuery::Node)
    ).void
  end
  def initialize(collation: nil, column_name: nil, format: nil, formatted_expr: nil, location: nil, omit_quotes: nil, on_empty: nil, on_error: nil, op: nil, passing_names: T.unsafe(nil), passing_values: T.unsafe(nil), path_spec: nil, returning: nil, use_io_coercion: nil, use_json_coercion: nil, wrapper: nil, xpr: nil); end

  sig { void }
  def clear_collation; end

  sig { void }
  def clear_column_name; end

  sig { void }
  def clear_format; end

  sig { void }
  def clear_formatted_expr; end

  sig { void }
  def clear_location; end

  sig { void }
  def clear_omit_quotes; end

  sig { void }
  def clear_on_empty; end

  sig { void }
  def clear_on_error; end

  sig { void }
  def clear_op; end

  sig { void }
  def clear_passing_names; end

  sig { void }
  def clear_passing_values; end

  sig { void }
  def clear_path_spec; end

  sig { void }
  def clear_returning; end

  sig { void }
  def clear_use_io_coercion; end

  sig { void }
  def clear_use_json_coercion; end

  sig { void }
  def clear_wrapper; end

  sig { void }
  def clear_xpr; end

  sig { returns(Integer) }
  def collation; end

  sig { params(value: Integer).void }
  def collation=(value); end

  sig { returns(String) }
  def column_name; end

  sig { params(value: String).void }
  def column_name=(value); end

  sig { returns(T.nilable(PgQuery::JsonFormat)) }
  def format; end

  sig { params(value: T.nilable(PgQuery::JsonFormat)).void }
  def format=(value); end

  sig { returns(T.nilable(PgQuery::Node)) }
  def formatted_expr; end

  sig { params(value: T.nilable(PgQuery::Node)).void }
  def formatted_expr=(value); end

  sig { returns(Object) }
  def has_format?; end

  sig { returns(Object) }
  def has_formatted_expr?; end

  sig { returns(Object) }
  def has_on_empty?; end

  sig { returns(Object) }
  def has_on_error?; end

  sig { returns(Object) }
  def has_path_spec?; end

  sig { returns(Object) }
  def has_returning?; end

  sig { returns(Object) }
  def has_xpr?; end

  sig { returns(Integer) }
  def location; end

  sig { params(value: Integer).void }
  def location=(value); end

  sig { returns(T::Boolean) }
  def omit_quotes; end

  sig { params(value: T::Boolean).void }
  def omit_quotes=(value); end

  sig { returns(T.nilable(PgQuery::JsonBehavior)) }
  def on_empty; end

  sig { params(value: T.nilable(PgQuery::JsonBehavior)).void }
  def on_empty=(value); end

  sig { returns(T.nilable(PgQuery::JsonBehavior)) }
  def on_error; end

  sig { params(value: T.nilable(PgQuery::JsonBehavior)).void }
  def on_error=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def op; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def op=(value); end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def passing_names; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def passing_names=(value); end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def passing_values; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def passing_values=(value); end

  sig { returns(T.nilable(PgQuery::Node)) }
  def path_spec; end

  sig { params(value: T.nilable(PgQuery::Node)).void }
  def path_spec=(value); end

  sig { returns(T.nilable(PgQuery::JsonReturning)) }
  def returning; end

  sig { params(value: T.nilable(PgQuery::JsonReturning)).void }
  def returning=(value); end

  sig { returns(T::Boolean) }
  def use_io_coercion; end

  sig { params(value: T::Boolean).void }
  def use_io_coercion=(value); end

  sig { returns(T::Boolean) }
  def use_json_coercion; end

  sig { params(value: T::Boolean).void }
  def use_json_coercion=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def wrapper; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def wrapper=(value); end

  sig { returns(T.nilable(PgQuery::Node)) }
  def xpr; end

  sig { params(value: T.nilable(PgQuery::Node)).void }
  def xpr=(value); end
end
