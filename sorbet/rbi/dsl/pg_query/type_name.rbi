# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PgQuery::TypeName`.
# Please instead update this file by running `bin/tapioca dsl PgQuery::TypeName`.


class PgQuery::TypeName < Google::Protobuf::AbstractMessage
  sig do
    params(
      array_bounds: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node])),
      location: T.nilable(Integer),
      names: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node])),
      pct_type: T.nilable(T::Boolean),
      setof: T.nilable(T::Boolean),
      type_oid: T.nilable(Integer),
      typemod: T.nilable(Integer),
      typmods: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node]))
    ).void
  end
  def initialize(array_bounds: T.unsafe(nil), location: nil, names: T.unsafe(nil), pct_type: nil, setof: nil, type_oid: nil, typemod: nil, typmods: T.unsafe(nil)); end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def array_bounds; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def array_bounds=(value); end

  sig { void }
  def clear_array_bounds; end

  sig { void }
  def clear_location; end

  sig { void }
  def clear_names; end

  sig { void }
  def clear_pct_type; end

  sig { void }
  def clear_setof; end

  sig { void }
  def clear_type_oid; end

  sig { void }
  def clear_typemod; end

  sig { void }
  def clear_typmods; end

  sig { returns(Integer) }
  def location; end

  sig { params(value: Integer).void }
  def location=(value); end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def names; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def names=(value); end

  sig { returns(T::Boolean) }
  def pct_type; end

  sig { params(value: T::Boolean).void }
  def pct_type=(value); end

  sig { returns(T::Boolean) }
  def setof; end

  sig { params(value: T::Boolean).void }
  def setof=(value); end

  sig { returns(Integer) }
  def type_oid; end

  sig { params(value: Integer).void }
  def type_oid=(value); end

  sig { returns(Integer) }
  def typemod; end

  sig { params(value: Integer).void }
  def typemod=(value); end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def typmods; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def typmods=(value); end
end
