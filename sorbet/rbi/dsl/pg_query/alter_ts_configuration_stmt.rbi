# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PgQuery::AlterTSConfigurationStmt`.
# Please instead update this file by running `bin/tapioca dsl PgQuery::AlterTSConfigurationStmt`.


class PgQuery::AlterTSConfigurationStmt < Google::Protobuf::AbstractMessage
  sig do
    params(
      cfgname: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node])),
      dicts: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node])),
      kind: T.nilable(T.any(Symbol, Integer)),
      missing_ok: T.nilable(T::Boolean),
      override: T.nilable(T::Boolean),
      replace: T.nilable(T::Boolean),
      tokentype: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node]))
    ).void
  end
  def initialize(cfgname: T.unsafe(nil), dicts: T.unsafe(nil), kind: nil, missing_ok: nil, override: nil, replace: nil, tokentype: T.unsafe(nil)); end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def cfgname; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def cfgname=(value); end

  sig { void }
  def clear_cfgname; end

  sig { void }
  def clear_dicts; end

  sig { void }
  def clear_kind; end

  sig { void }
  def clear_missing_ok; end

  sig { void }
  def clear_override; end

  sig { void }
  def clear_replace; end

  sig { void }
  def clear_tokentype; end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def dicts; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def dicts=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def kind; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def kind=(value); end

  sig { returns(T::Boolean) }
  def missing_ok; end

  sig { params(value: T::Boolean).void }
  def missing_ok=(value); end

  sig { returns(T::Boolean) }
  def override; end

  sig { params(value: T::Boolean).void }
  def override=(value); end

  sig { returns(T::Boolean) }
  def replace; end

  sig { params(value: T::Boolean).void }
  def replace=(value); end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def tokentype; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def tokentype=(value); end
end
