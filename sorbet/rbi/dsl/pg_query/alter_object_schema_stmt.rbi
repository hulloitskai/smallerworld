# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PgQuery::AlterObjectSchemaStmt`.
# Please instead update this file by running `bin/tapioca dsl PgQuery::AlterObjectSchemaStmt`.


class PgQuery::AlterObjectSchemaStmt < Google::Protobuf::AbstractMessage
  sig do
    params(
      missing_ok: T.nilable(T::Boolean),
      newschema: T.nilable(String),
      object: T.nilable(PgQuery::Node),
      object_type: T.nilable(T.any(Symbol, Integer)),
      relation: T.nilable(PgQuery::RangeVar)
    ).void
  end
  def initialize(missing_ok: nil, newschema: nil, object: nil, object_type: nil, relation: nil); end

  sig { void }
  def clear_missing_ok; end

  sig { void }
  def clear_newschema; end

  sig { void }
  def clear_object; end

  sig { void }
  def clear_object_type; end

  sig { void }
  def clear_relation; end

  sig { returns(Object) }
  def has_object?; end

  sig { returns(Object) }
  def has_relation?; end

  sig { returns(T::Boolean) }
  def missing_ok; end

  sig { params(value: T::Boolean).void }
  def missing_ok=(value); end

  sig { returns(String) }
  def newschema; end

  sig { params(value: String).void }
  def newschema=(value); end

  sig { returns(T.nilable(PgQuery::Node)) }
  def object; end

  sig { params(value: T.nilable(PgQuery::Node)).void }
  def object=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def object_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def object_type=(value); end

  sig { returns(T.nilable(PgQuery::RangeVar)) }
  def relation; end

  sig { params(value: T.nilable(PgQuery::RangeVar)).void }
  def relation=(value); end
end
