# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PgQuery::CreateSeqStmt`.
# Please instead update this file by running `bin/tapioca dsl PgQuery::CreateSeqStmt`.


class PgQuery::CreateSeqStmt < Google::Protobuf::AbstractMessage
  sig do
    params(
      for_identity: T.nilable(T::Boolean),
      if_not_exists: T.nilable(T::Boolean),
      options: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node])),
      owner_id: T.nilable(Integer),
      sequence: T.nilable(PgQuery::RangeVar)
    ).void
  end
  def initialize(for_identity: nil, if_not_exists: nil, options: T.unsafe(nil), owner_id: nil, sequence: nil); end

  sig { void }
  def clear_for_identity; end

  sig { void }
  def clear_if_not_exists; end

  sig { void }
  def clear_options; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_sequence; end

  sig { returns(T::Boolean) }
  def for_identity; end

  sig { params(value: T::Boolean).void }
  def for_identity=(value); end

  sig { returns(Object) }
  def has_sequence?; end

  sig { returns(T::Boolean) }
  def if_not_exists; end

  sig { params(value: T::Boolean).void }
  def if_not_exists=(value); end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def options; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def options=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(T.nilable(PgQuery::RangeVar)) }
  def sequence; end

  sig { params(value: T.nilable(PgQuery::RangeVar)).void }
  def sequence=(value); end
end
