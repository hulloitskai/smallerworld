# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PgQuery::AlterDomainStmt`.
# Please instead update this file by running `bin/tapioca dsl PgQuery::AlterDomainStmt`.


class PgQuery::AlterDomainStmt < Google::Protobuf::AbstractMessage
  sig do
    params(
      behavior: T.nilable(T.any(Symbol, Integer)),
      def: T.nilable(PgQuery::Node),
      missing_ok: T.nilable(T::Boolean),
      name: T.nilable(String),
      subtype: T.nilable(String),
      type_name: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node]))
    ).void
  end
  def initialize(behavior: nil, def: nil, missing_ok: nil, name: nil, subtype: nil, type_name: T.unsafe(nil)); end

  sig { returns(T.any(Symbol, Integer)) }
  def behavior; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def behavior=(value); end

  sig { void }
  def clear_behavior; end

  sig { void }
  def clear_def; end

  sig { void }
  def clear_missing_ok; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_subtype; end

  sig { void }
  def clear_type_name; end

  sig { returns(T.nilable(PgQuery::Node)) }
  def def; end

  sig { params(value: T.nilable(PgQuery::Node)).void }
  def def=(value); end

  sig { returns(Object) }
  def has_def?; end

  sig { returns(T::Boolean) }
  def missing_ok; end

  sig { params(value: T::Boolean).void }
  def missing_ok=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(String) }
  def subtype; end

  sig { params(value: String).void }
  def subtype=(value); end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def type_name; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def type_name=(value); end
end
