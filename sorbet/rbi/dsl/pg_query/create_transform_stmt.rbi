# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PgQuery::CreateTransformStmt`.
# Please instead update this file by running `bin/tapioca dsl PgQuery::CreateTransformStmt`.


class PgQuery::CreateTransformStmt < Google::Protobuf::AbstractMessage
  sig do
    params(
      fromsql: T.nilable(PgQuery::ObjectWithArgs),
      lang: T.nilable(String),
      replace: T.nilable(T::Boolean),
      tosql: T.nilable(PgQuery::ObjectWithArgs),
      type_name: T.nilable(PgQuery::TypeName)
    ).void
  end
  def initialize(fromsql: nil, lang: nil, replace: nil, tosql: nil, type_name: nil); end

  sig { void }
  def clear_fromsql; end

  sig { void }
  def clear_lang; end

  sig { void }
  def clear_replace; end

  sig { void }
  def clear_tosql; end

  sig { void }
  def clear_type_name; end

  sig { returns(T.nilable(PgQuery::ObjectWithArgs)) }
  def fromsql; end

  sig { params(value: T.nilable(PgQuery::ObjectWithArgs)).void }
  def fromsql=(value); end

  sig { returns(Object) }
  def has_fromsql?; end

  sig { returns(Object) }
  def has_tosql?; end

  sig { returns(Object) }
  def has_type_name?; end

  sig { returns(String) }
  def lang; end

  sig { params(value: String).void }
  def lang=(value); end

  sig { returns(T::Boolean) }
  def replace; end

  sig { params(value: T::Boolean).void }
  def replace=(value); end

  sig { returns(T.nilable(PgQuery::ObjectWithArgs)) }
  def tosql; end

  sig { params(value: T.nilable(PgQuery::ObjectWithArgs)).void }
  def tosql=(value); end

  sig { returns(T.nilable(PgQuery::TypeName)) }
  def type_name; end

  sig { params(value: T.nilable(PgQuery::TypeName)).void }
  def type_name=(value); end
end
