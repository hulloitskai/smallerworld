# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PgQuery::XmlSerialize`.
# Please instead update this file by running `bin/tapioca dsl PgQuery::XmlSerialize`.


class PgQuery::XmlSerialize < Google::Protobuf::AbstractMessage
  sig do
    params(
      expr: T.nilable(PgQuery::Node),
      indent: T.nilable(T::Boolean),
      location: T.nilable(Integer),
      type_name: T.nilable(PgQuery::TypeName),
      xmloption: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(expr: nil, indent: nil, location: nil, type_name: nil, xmloption: nil); end

  sig { void }
  def clear_expr; end

  sig { void }
  def clear_indent; end

  sig { void }
  def clear_location; end

  sig { void }
  def clear_type_name; end

  sig { void }
  def clear_xmloption; end

  sig { returns(T.nilable(PgQuery::Node)) }
  def expr; end

  sig { params(value: T.nilable(PgQuery::Node)).void }
  def expr=(value); end

  sig { returns(Object) }
  def has_expr?; end

  sig { returns(Object) }
  def has_type_name?; end

  sig { returns(T::Boolean) }
  def indent; end

  sig { params(value: T::Boolean).void }
  def indent=(value); end

  sig { returns(Integer) }
  def location; end

  sig { params(value: Integer).void }
  def location=(value); end

  sig { returns(T.nilable(PgQuery::TypeName)) }
  def type_name; end

  sig { params(value: T.nilable(PgQuery::TypeName)).void }
  def type_name=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def xmloption; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def xmloption=(value); end
end
