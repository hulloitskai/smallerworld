# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PgQuery::CreateDomainStmt`.
# Please instead update this file by running `bin/tapioca dsl PgQuery::CreateDomainStmt`.


class PgQuery::CreateDomainStmt < Google::Protobuf::AbstractMessage
  sig do
    params(
      coll_clause: T.nilable(PgQuery::CollateClause),
      constraints: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node])),
      domainname: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node])),
      type_name: T.nilable(PgQuery::TypeName)
    ).void
  end
  def initialize(coll_clause: nil, constraints: T.unsafe(nil), domainname: T.unsafe(nil), type_name: nil); end

  sig { void }
  def clear_coll_clause; end

  sig { void }
  def clear_constraints; end

  sig { void }
  def clear_domainname; end

  sig { void }
  def clear_type_name; end

  sig { returns(T.nilable(PgQuery::CollateClause)) }
  def coll_clause; end

  sig { params(value: T.nilable(PgQuery::CollateClause)).void }
  def coll_clause=(value); end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def constraints; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def constraints=(value); end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def domainname; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def domainname=(value); end

  sig { returns(Object) }
  def has_coll_clause?; end

  sig { returns(Object) }
  def has_type_name?; end

  sig { returns(T.nilable(PgQuery::TypeName)) }
  def type_name; end

  sig { params(value: T.nilable(PgQuery::TypeName)).void }
  def type_name=(value); end
end
