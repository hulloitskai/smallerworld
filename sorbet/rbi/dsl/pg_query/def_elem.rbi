# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PgQuery::DefElem`.
# Please instead update this file by running `bin/tapioca dsl PgQuery::DefElem`.


class PgQuery::DefElem < Google::Protobuf::AbstractMessage
  sig do
    params(
      arg: T.nilable(PgQuery::Node),
      defaction: T.nilable(T.any(Symbol, Integer)),
      defname: T.nilable(String),
      defnamespace: T.nilable(String),
      location: T.nilable(Integer)
    ).void
  end
  def initialize(arg: nil, defaction: nil, defname: nil, defnamespace: nil, location: nil); end

  sig { returns(T.nilable(PgQuery::Node)) }
  def arg; end

  sig { params(value: T.nilable(PgQuery::Node)).void }
  def arg=(value); end

  sig { void }
  def clear_arg; end

  sig { void }
  def clear_defaction; end

  sig { void }
  def clear_defname; end

  sig { void }
  def clear_defnamespace; end

  sig { void }
  def clear_location; end

  sig { returns(T.any(Symbol, Integer)) }
  def defaction; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def defaction=(value); end

  sig { returns(String) }
  def defname; end

  sig { params(value: String).void }
  def defname=(value); end

  sig { returns(String) }
  def defnamespace; end

  sig { params(value: String).void }
  def defnamespace=(value); end

  sig { returns(Object) }
  def has_arg?; end

  sig { returns(Integer) }
  def location; end

  sig { params(value: Integer).void }
  def location=(value); end
end
