# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PgQuery::AlterExtensionContentsStmt`.
# Please instead update this file by running `bin/tapioca dsl PgQuery::AlterExtensionContentsStmt`.


class PgQuery::AlterExtensionContentsStmt < Google::Protobuf::AbstractMessage
  sig do
    params(
      action: T.nilable(Integer),
      extname: T.nilable(String),
      object: T.nilable(PgQuery::Node),
      objtype: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(action: nil, extname: nil, object: nil, objtype: nil); end

  sig { returns(Integer) }
  def action; end

  sig { params(value: Integer).void }
  def action=(value); end

  sig { void }
  def clear_action; end

  sig { void }
  def clear_extname; end

  sig { void }
  def clear_object; end

  sig { void }
  def clear_objtype; end

  sig { returns(String) }
  def extname; end

  sig { params(value: String).void }
  def extname=(value); end

  sig { returns(Object) }
  def has_object?; end

  sig { returns(T.nilable(PgQuery::Node)) }
  def object; end

  sig { params(value: T.nilable(PgQuery::Node)).void }
  def object=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def objtype; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def objtype=(value); end
end
