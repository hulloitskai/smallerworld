# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PgQuery::CreateCastStmt`.
# Please instead update this file by running `bin/tapioca dsl PgQuery::CreateCastStmt`.


class PgQuery::CreateCastStmt < Google::Protobuf::AbstractMessage
  sig do
    params(
      context: T.nilable(T.any(Symbol, Integer)),
      func: T.nilable(PgQuery::ObjectWithArgs),
      inout: T.nilable(T::Boolean),
      sourcetype: T.nilable(PgQuery::TypeName),
      targettype: T.nilable(PgQuery::TypeName)
    ).void
  end
  def initialize(context: nil, func: nil, inout: nil, sourcetype: nil, targettype: nil); end

  sig { void }
  def clear_context; end

  sig { void }
  def clear_func; end

  sig { void }
  def clear_inout; end

  sig { void }
  def clear_sourcetype; end

  sig { void }
  def clear_targettype; end

  sig { returns(T.any(Symbol, Integer)) }
  def context; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def context=(value); end

  sig { returns(T.nilable(PgQuery::ObjectWithArgs)) }
  def func; end

  sig { params(value: T.nilable(PgQuery::ObjectWithArgs)).void }
  def func=(value); end

  sig { returns(Object) }
  def has_func?; end

  sig { returns(Object) }
  def has_sourcetype?; end

  sig { returns(Object) }
  def has_targettype?; end

  sig { returns(T::Boolean) }
  def inout; end

  sig { params(value: T::Boolean).void }
  def inout=(value); end

  sig { returns(T.nilable(PgQuery::TypeName)) }
  def sourcetype; end

  sig { params(value: T.nilable(PgQuery::TypeName)).void }
  def sourcetype=(value); end

  sig { returns(T.nilable(PgQuery::TypeName)) }
  def targettype; end

  sig { params(value: T.nilable(PgQuery::TypeName)).void }
  def targettype=(value); end
end
