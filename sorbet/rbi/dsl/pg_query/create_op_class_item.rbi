# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PgQuery::CreateOpClassItem`.
# Please instead update this file by running `bin/tapioca dsl PgQuery::CreateOpClassItem`.


class PgQuery::CreateOpClassItem < Google::Protobuf::AbstractMessage
  sig do
    params(
      class_args: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node])),
      itemtype: T.nilable(Integer),
      name: T.nilable(PgQuery::ObjectWithArgs),
      number: T.nilable(Integer),
      order_family: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node])),
      storedtype: T.nilable(PgQuery::TypeName)
    ).void
  end
  def initialize(class_args: T.unsafe(nil), itemtype: nil, name: nil, number: nil, order_family: T.unsafe(nil), storedtype: nil); end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def class_args; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def class_args=(value); end

  sig { void }
  def clear_class_args; end

  sig { void }
  def clear_itemtype; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_number; end

  sig { void }
  def clear_order_family; end

  sig { void }
  def clear_storedtype; end

  sig { returns(Object) }
  def has_name?; end

  sig { returns(Object) }
  def has_storedtype?; end

  sig { returns(Integer) }
  def itemtype; end

  sig { params(value: Integer).void }
  def itemtype=(value); end

  sig { returns(T.nilable(PgQuery::ObjectWithArgs)) }
  def name; end

  sig { params(value: T.nilable(PgQuery::ObjectWithArgs)).void }
  def name=(value); end

  sig { returns(Integer) }
  def number; end

  sig { params(value: Integer).void }
  def number=(value); end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def order_family; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def order_family=(value); end

  sig { returns(T.nilable(PgQuery::TypeName)) }
  def storedtype; end

  sig { params(value: T.nilable(PgQuery::TypeName)).void }
  def storedtype=(value); end
end
