# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PgQuery::RangeVar`.
# Please instead update this file by running `bin/tapioca dsl PgQuery::RangeVar`.


class PgQuery::RangeVar < Google::Protobuf::AbstractMessage
  sig do
    params(
      alias: T.nilable(PgQuery::Alias),
      catalogname: T.nilable(String),
      inh: T.nilable(T::Boolean),
      location: T.nilable(Integer),
      relname: T.nilable(String),
      relpersistence: T.nilable(String),
      schemaname: T.nilable(String)
    ).void
  end
  def initialize(alias: nil, catalogname: nil, inh: nil, location: nil, relname: nil, relpersistence: nil, schemaname: nil); end

  sig { returns(T.nilable(PgQuery::Alias)) }
  def alias; end

  sig { params(value: T.nilable(PgQuery::Alias)).void }
  def alias=(value); end

  sig { returns(String) }
  def catalogname; end

  sig { params(value: String).void }
  def catalogname=(value); end

  sig { void }
  def clear_alias; end

  sig { void }
  def clear_catalogname; end

  sig { void }
  def clear_inh; end

  sig { void }
  def clear_location; end

  sig { void }
  def clear_relname; end

  sig { void }
  def clear_relpersistence; end

  sig { void }
  def clear_schemaname; end

  sig { returns(Object) }
  def has_alias?; end

  sig { returns(T::Boolean) }
  def inh; end

  sig { params(value: T::Boolean).void }
  def inh=(value); end

  sig { returns(Integer) }
  def location; end

  sig { params(value: Integer).void }
  def location=(value); end

  sig { returns(String) }
  def relname; end

  sig { params(value: String).void }
  def relname=(value); end

  sig { returns(String) }
  def relpersistence; end

  sig { params(value: String).void }
  def relpersistence=(value); end

  sig { returns(String) }
  def schemaname; end

  sig { params(value: String).void }
  def schemaname=(value); end
end
