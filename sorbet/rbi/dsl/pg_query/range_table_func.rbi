# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PgQuery::RangeTableFunc`.
# Please instead update this file by running `bin/tapioca dsl PgQuery::RangeTableFunc`.


class PgQuery::RangeTableFunc < Google::Protobuf::AbstractMessage
  sig do
    params(
      alias: T.nilable(PgQuery::Alias),
      columns: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node])),
      docexpr: T.nilable(PgQuery::Node),
      lateral: T.nilable(T::Boolean),
      location: T.nilable(Integer),
      namespaces: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node])),
      rowexpr: T.nilable(PgQuery::Node)
    ).void
  end
  def initialize(alias: nil, columns: T.unsafe(nil), docexpr: nil, lateral: nil, location: nil, namespaces: T.unsafe(nil), rowexpr: nil); end

  sig { returns(T.nilable(PgQuery::Alias)) }
  def alias; end

  sig { params(value: T.nilable(PgQuery::Alias)).void }
  def alias=(value); end

  sig { void }
  def clear_alias; end

  sig { void }
  def clear_columns; end

  sig { void }
  def clear_docexpr; end

  sig { void }
  def clear_lateral; end

  sig { void }
  def clear_location; end

  sig { void }
  def clear_namespaces; end

  sig { void }
  def clear_rowexpr; end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def columns; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def columns=(value); end

  sig { returns(T.nilable(PgQuery::Node)) }
  def docexpr; end

  sig { params(value: T.nilable(PgQuery::Node)).void }
  def docexpr=(value); end

  sig { returns(Object) }
  def has_alias?; end

  sig { returns(Object) }
  def has_docexpr?; end

  sig { returns(Object) }
  def has_rowexpr?; end

  sig { returns(T::Boolean) }
  def lateral; end

  sig { params(value: T::Boolean).void }
  def lateral=(value); end

  sig { returns(Integer) }
  def location; end

  sig { params(value: Integer).void }
  def location=(value); end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def namespaces; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def namespaces=(value); end

  sig { returns(T.nilable(PgQuery::Node)) }
  def rowexpr; end

  sig { params(value: T.nilable(PgQuery::Node)).void }
  def rowexpr=(value); end
end
