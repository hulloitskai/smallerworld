/**
 * Generated by: GPT-5 Codex
 * Last modified: 2025-10-27 00:00:00 UTC
 *
 * This code was AI-generated and may require human review and testing.
 */
import { Image, Radio, type RadioGroupProps } from "@mantine/core";

import NoneIcon from "~icons/heroicons/no-symbol-20-solid";

import {
  availableUserThemes,
  userThemeThumbnailSrc,
} from "~/helpers/userThemes";
import { type UserTheme } from "~/types";

import classes from "./UserThemeRadioGroup.module.css";

export interface UserThemeRadioGroupProps
  extends Omit<RadioGroupProps, "children"> {}

const UserThemeRadioGroup: FC<UserThemeRadioGroupProps> = ({
  ...otherProps
}) => {
  const currentUser = useCurrentUser();
  const themes = useMemo(() => availableUserThemes(currentUser), [currentUser]);
  return (
    <Radio.Group label="your page theme" labelProps={{ mb: 8 }} {...otherProps}>
      <Group justify="center" gap={6} wrap="wrap">
        <RadioCard theme={null} />
        {themes.map(theme => (
          <RadioCard key={theme} {...{ theme }} />
        ))}
      </Group>
    </Radio.Group>
  );
};

export default UserThemeRadioGroup;

interface RadioCardProps {
  theme: UserTheme | "bakudeku" | null;
  imageSrc?: string;
}

const RadioCard: FC<RadioCardProps> = ({ theme, imageSrc }) => {
  return (
    <Radio.Card className={classes.radioCard} value={theme ?? ""}>
      {theme ? (
        <Image
          src={imageSrc ?? userThemeThumbnailSrc(theme)}
          radius={1000}
          h="100%"
        />
      ) : (
        <Center className={classes.noTheme}>
          <Box component={NoneIcon} fz={24} c="dimmed" />
        </Center>
      )}
    </Radio.Card>
  );
};
